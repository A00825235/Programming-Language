
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BREAK COMMENT ELSE EQ FALSE FLOAT FOR FUNCTION GEQ ID IF IN INPUT INTEGER LEQ LET MAIN NEQ PRINT TRUE WHILE\n\tINIT : MAIN '(' ')' '{' S '}'\n\t\n    S : S S\n    S : \n    \n\tS : IF '(' LOGIC ')' '{' S '}'\n\t\n\tS : IF '(' LOGIC ')' '{' S '}' ELSE '{' S '}'\n\t\n\tS : ID '=' EXP\n\t\n\tS : PRINT '(' EXP ')'\n\t\n    S : PRINT '(' ID ')'\n\t\n    S : ID '=' INPUT '(' ')'\n\t\n    S : BREAK\n\t\n\tS : WHILE '(' LOGIC ')' '{' S '}'\n\t\n\tS : FOR '(' ID IN INTEGER ')' '{' S '}'\n\t\n    SYMBOL : '>'\n    SYMBOL : '<' \n    SYMBOL : LEQ \n    SYMBOL : GEQ \n    SYMBOL : NEQ \n    SYMBOL : EQ \n\t\n    LOGIC : EXP SYMBOL EXP\n\t\n    EXP : EXP '%' TERM\n\tEXP : EXP '+' TERM\n\tEXP : EXP '-' TERM\n    EXP : TERM\n    TERM : TERM '*' FACT\n\tTERM : TERM '/' FACT\n    TERM : FACT\n\t\n\tFACT : INTEGER\n    FACT : FLOAT\n\t\n    FACT : '(' EXP ')'\n\t\n\tFACT : ID\n\t"
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,14,],[0,-1,]),'(':([2,7,9,11,12,15,16,17,18,20,29,36,37,38,39,40,41,42,43,44,45,46,47,],[3,15,17,18,19,20,20,20,20,20,48,20,20,20,20,-13,-14,-15,-16,-17,-18,20,20,]),')':([3,21,23,24,25,26,27,30,31,32,34,48,53,55,56,57,58,59,60,63,],[4,35,-23,-26,-27,-28,-30,49,50,51,53,61,-29,-19,-20,-21,-22,-24,-25,66,]),'{':([4,35,51,66,70,],[5,54,62,69,72,]),'}':([5,6,10,13,23,24,25,26,27,28,49,50,53,54,56,57,58,59,60,61,62,64,65,67,68,69,71,72,73,74,75,],[-3,14,-10,-2,-23,-26,-27,-28,-30,-6,-7,-8,-29,-3,-20,-21,-22,-24,-25,-9,-3,67,68,-4,-11,-3,73,-3,-12,75,-5,]),'IF':([5,6,10,13,23,24,25,26,27,28,49,50,53,54,56,57,58,59,60,61,62,64,65,67,68,69,71,72,73,74,75,],[7,7,-10,7,-23,-26,-27,-28,-30,-6,-7,-8,-29,7,-20,-21,-22,-24,-25,-9,7,7,7,-4,-11,7,7,7,-12,7,-5,]),'ID':([5,6,10,13,15,16,17,18,19,20,23,24,25,26,27,28,36,37,38,39,40,41,42,43,44,45,46,47,49,50,53,54,56,57,58,59,60,61,62,64,65,67,68,69,71,72,73,74,75,],[8,8,-10,8,27,27,31,27,33,27,-23,-26,-27,-28,-30,-6,27,27,27,27,-13,-14,-15,-16,-17,-18,27,27,-7,-8,-29,8,-20,-21,-22,-24,-25,-9,8,8,8,-4,-11,8,8,8,-12,8,-5,]),'PRINT':([5,6,10,13,23,24,25,26,27,28,49,50,53,54,56,57,58,59,60,61,62,64,65,67,68,69,71,72,73,74,75,],[9,9,-10,9,-23,-26,-27,-28,-30,-6,-7,-8,-29,9,-20,-21,-22,-24,-25,-9,9,9,9,-4,-11,9,9,9,-12,9,-5,]),'BREAK':([5,6,10,13,23,24,25,26,27,28,49,50,53,54,56,57,58,59,60,61,62,64,65,67,68,69,71,72,73,74,75,],[10,10,-10,10,-23,-26,-27,-28,-30,-6,-7,-8,-29,10,-20,-21,-22,-24,-25,-9,10,10,10,-4,-11,10,10,10,-12,10,-5,]),'WHILE':([5,6,10,13,23,24,25,26,27,28,49,50,53,54,56,57,58,59,60,61,62,64,65,67,68,69,71,72,73,74,75,],[11,11,-10,11,-23,-26,-27,-28,-30,-6,-7,-8,-29,11,-20,-21,-22,-24,-25,-9,11,11,11,-4,-11,11,11,11,-12,11,-5,]),'FOR':([5,6,10,13,23,24,25,26,27,28,49,50,53,54,56,57,58,59,60,61,62,64,65,67,68,69,71,72,73,74,75,],[12,12,-10,12,-23,-26,-27,-28,-30,-6,-7,-8,-29,12,-20,-21,-22,-24,-25,-9,12,12,12,-4,-11,12,12,12,-12,12,-5,]),'=':([8,],[16,]),'INTEGER':([15,16,17,18,20,36,37,38,39,40,41,42,43,44,45,46,47,52,],[25,25,25,25,25,25,25,25,25,-13,-14,-15,-16,-17,-18,25,25,63,]),'FLOAT':([15,16,17,18,20,36,37,38,39,40,41,42,43,44,45,46,47,],[26,26,26,26,26,26,26,26,26,-13,-14,-15,-16,-17,-18,26,26,]),'INPUT':([16,],[29,]),'%':([22,23,24,25,26,27,28,30,31,34,53,55,56,57,58,59,60,],[37,-23,-26,-27,-28,-30,37,37,-30,37,-29,37,-20,-21,-22,-24,-25,]),'+':([22,23,24,25,26,27,28,30,31,34,53,55,56,57,58,59,60,],[38,-23,-26,-27,-28,-30,38,38,-30,38,-29,38,-20,-21,-22,-24,-25,]),'-':([22,23,24,25,26,27,28,30,31,34,53,55,56,57,58,59,60,],[39,-23,-26,-27,-28,-30,39,39,-30,39,-29,39,-20,-21,-22,-24,-25,]),'>':([22,23,24,25,26,27,53,56,57,58,59,60,],[40,-23,-26,-27,-28,-30,-29,-20,-21,-22,-24,-25,]),'<':([22,23,24,25,26,27,53,56,57,58,59,60,],[41,-23,-26,-27,-28,-30,-29,-20,-21,-22,-24,-25,]),'LEQ':([22,23,24,25,26,27,53,56,57,58,59,60,],[42,-23,-26,-27,-28,-30,-29,-20,-21,-22,-24,-25,]),'GEQ':([22,23,24,25,26,27,53,56,57,58,59,60,],[43,-23,-26,-27,-28,-30,-29,-20,-21,-22,-24,-25,]),'NEQ':([22,23,24,25,26,27,53,56,57,58,59,60,],[44,-23,-26,-27,-28,-30,-29,-20,-21,-22,-24,-25,]),'EQ':([22,23,24,25,26,27,53,56,57,58,59,60,],[45,-23,-26,-27,-28,-30,-29,-20,-21,-22,-24,-25,]),'*':([23,24,25,26,27,31,53,56,57,58,59,60,],[46,-26,-27,-28,-30,-30,-29,46,46,46,-24,-25,]),'/':([23,24,25,26,27,31,53,56,57,58,59,60,],[47,-26,-27,-28,-30,-30,-29,47,47,47,-24,-25,]),'IN':([33,],[52,]),'ELSE':([67,],[70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'S':([5,6,13,54,62,64,65,69,71,72,74,],[6,13,13,64,65,13,13,71,13,74,13,]),'LOGIC':([15,18,],[21,32,]),'EXP':([15,16,17,18,20,36,],[22,28,30,22,34,55,]),'TERM':([15,16,17,18,20,36,37,38,39,],[23,23,23,23,23,23,56,57,58,]),'FACT':([15,16,17,18,20,36,37,38,39,46,47,],[24,24,24,24,24,24,24,24,24,59,60,]),'SYMBOL':([22,],[36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> MAIN ( ) { S }','INIT',6,'p_INIT','main.py',69),
  ('S -> S S','S',2,'p_S','main.py',76),
  ('S -> <empty>','S',0,'p_S','main.py',77),
  ('S -> IF ( LOGIC ) { S }','S',7,'p_S_if_exp','main.py',82),
  ('S -> IF ( LOGIC ) { S } ELSE { S }','S',11,'p_S_if_else_exp','main.py',88),
  ('S -> ID = EXP','S',3,'p_S_exp','main.py',94),
  ('S -> PRINT ( EXP )','S',4,'p_S_print','main.py',100),
  ('S -> PRINT ( ID )','S',4,'p_S_print_id','main.py',107),
  ('S -> ID = INPUT ( )','S',5,'p_S_input','main.py',113),
  ('S -> BREAK','S',1,'p_S_break','main.py',120),
  ('S -> WHILE ( LOGIC ) { S }','S',7,'p_S_while','main.py',126),
  ('S -> FOR ( ID IN INTEGER ) { S }','S',9,'p_S_for','main.py',132),
  ('SYMBOL -> >','SYMBOL',1,'p_LOGIC_symbol','main.py',138),
  ('SYMBOL -> <','SYMBOL',1,'p_LOGIC_symbol','main.py',139),
  ('SYMBOL -> LEQ','SYMBOL',1,'p_LOGIC_symbol','main.py',140),
  ('SYMBOL -> GEQ','SYMBOL',1,'p_LOGIC_symbol','main.py',141),
  ('SYMBOL -> NEQ','SYMBOL',1,'p_LOGIC_symbol','main.py',142),
  ('SYMBOL -> EQ','SYMBOL',1,'p_LOGIC_symbol','main.py',143),
  ('LOGIC -> EXP SYMBOL EXP','LOGIC',3,'p_LOGIC','main.py',149),
  ('EXP -> EXP % TERM','EXP',3,'p_EXP','main.py',156),
  ('EXP -> EXP + TERM','EXP',3,'p_EXP','main.py',157),
  ('EXP -> EXP - TERM','EXP',3,'p_EXP','main.py',158),
  ('EXP -> TERM','EXP',1,'p_EXP','main.py',159),
  ('TERM -> TERM * FACT','TERM',3,'p_EXP','main.py',160),
  ('TERM -> TERM / FACT','TERM',3,'p_EXP','main.py',161),
  ('TERM -> FACT','TERM',1,'p_EXP','main.py',162),
  ('FACT -> INTEGER','FACT',1,'p_FACT','main.py',172),
  ('FACT -> FLOAT','FACT',1,'p_FACT','main.py',173),
  ('FACT -> ( EXP )','FACT',3,'p_FACT_paren','main.py',179),
  ('FACT -> ID','FACT',1,'p_FACT_id','main.py',185),
]
